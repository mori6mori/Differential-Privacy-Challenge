{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# CDSS Data Science Hackathon 2023\n","\n","Data and Privacy Track\n","\n","Sunny Fang, Lucy King, Andrea Lopez, Mori Liu"],"metadata":{"id":"NTv_FUZ1L4gz"}},{"cell_type":"code","source":["! pip install python-dp"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VY16vPbOymDx","executionInfo":{"status":"ok","timestamp":1676149834291,"user_tz":300,"elapsed":11031,"user":{"displayName":"Andrea Lopez","userId":"06384222725563447101"}},"outputId":"2ce81714-04ef-4aec-ed8f-18cf1b6f9f58"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: python-dp in /usr/local/lib/python3.8/dist-packages (1.1.1)\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6p-DntdaLzNw"},"outputs":[],"source":["import pandas as pd\n","import pydp as dp\n","from pydp.algorithms.laplacian import BoundedSum, BoundedMean, Count, Max\n","import pandas as pd\n","import statistics  # for calculating mean without applying differential privacy"]},{"cell_type":"markdown","source":["Import dataset & clean"],"metadata":{"id":"P6DK42BfrfIv"}},{"cell_type":"code","source":["df = pd.read_csv('/yellow_cab_data.csv')\n","df = df.dropna()\n","df[100:200]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":483},"id":"3RmewPXkriKK","executionInfo":{"status":"ok","timestamp":1676153920265,"user_tz":300,"elapsed":545,"user":{"displayName":"Andrea Lopez","userId":"06384222725563447101"}},"outputId":"cd25f453-39e9-40b3-9506-3729c5229b14"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     VendorID tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n","100         1  2022-01-01 00:36:35   2022-01-01 00:36:35              1.0   \n","101         2  2022-01-01 00:30:07   2022-01-01 00:49:30              1.0   \n","102         1  2022-01-01 00:10:26   2022-01-01 00:19:07              1.0   \n","103         2  2022-01-01 01:00:33   2022-01-01 01:25:46              2.0   \n","104         1  2022-01-01 00:26:48   2022-01-01 00:29:57              2.0   \n","..        ...                  ...                   ...              ...   \n","195         2  2022-01-01 00:49:55   2022-01-01 01:11:52              1.0   \n","196         2  2022-01-01 00:17:27   2022-01-01 00:30:05              1.0   \n","197         2  2022-01-01 00:10:45   2022-01-01 00:13:47              3.0   \n","198         2  2022-01-01 00:30:14   2022-01-01 00:32:12              1.0   \n","199         2  2022-01-01 00:28:24   2022-01-01 00:56:24              1.0   \n","\n","     trip_distance  RatecodeID store_and_fwd_flag  PULocationID  DOLocationID  \\\n","100           0.00         1.0                  N           132           264   \n","101           5.59         1.0                  N           142            79   \n","102           1.20         1.0                  N            68           234   \n","103           5.52         1.0                  N           255           249   \n","104           0.40         1.0                  N            43           239   \n","..             ...         ...                ...           ...           ...   \n","195           3.94         1.0                  N           164            88   \n","196           2.08         1.0                  N           238           262   \n","197           0.35         1.0                  N           170           170   \n","198           0.84         1.0                  N           137            79   \n","199           6.98         1.0                  N           249           179   \n","\n","     payment_type  fare_amount  extra  mta_tax  tip_amount  tolls_amount  \\\n","100             2        115.0   1.75      0.5        0.00           0.0   \n","101             2         19.5   0.50      0.5        0.00           0.0   \n","102             2          6.5   3.00      0.5        0.00           0.0   \n","103             1         20.5   0.50      0.5        4.86           0.0   \n","104             1          4.0   3.00      0.5        1.55           0.0   \n","..            ...          ...    ...      ...         ...           ...   \n","195             2         16.5   0.50      0.5        0.00           0.0   \n","196             1         11.0   0.50      0.5        2.00           0.0   \n","197             1          4.0   0.50      0.5        0.00           0.0   \n","198             1          4.5   0.50      0.5        1.66           0.0   \n","199             2         24.0   0.50      0.5        0.00           0.0   \n","\n","     improvement_surcharge  total_amount  congestion_surcharge  airport_fee  \n","100                    0.3        117.55                   0.0         1.25  \n","101                    0.3         23.30                   2.5         0.00  \n","102                    0.3         10.30                   2.5         0.00  \n","103                    0.3         29.16                   2.5         0.00  \n","104                    0.3          9.35                   2.5         0.00  \n","..                     ...           ...                   ...          ...  \n","195                    0.3         20.30                   2.5         0.00  \n","196                    0.3         16.80                   2.5         0.00  \n","197                    0.3          7.80                   2.5         0.00  \n","198                    0.3          9.96                   2.5         0.00  \n","199                    0.3         27.80                   2.5         0.00  \n","\n","[100 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-c21ea182-cbb7-4a4f-b450-22c1ef52f70c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VendorID</th>\n","      <th>tpep_pickup_datetime</th>\n","      <th>tpep_dropoff_datetime</th>\n","      <th>passenger_count</th>\n","      <th>trip_distance</th>\n","      <th>RatecodeID</th>\n","      <th>store_and_fwd_flag</th>\n","      <th>PULocationID</th>\n","      <th>DOLocationID</th>\n","      <th>payment_type</th>\n","      <th>fare_amount</th>\n","      <th>extra</th>\n","      <th>mta_tax</th>\n","      <th>tip_amount</th>\n","      <th>tolls_amount</th>\n","      <th>improvement_surcharge</th>\n","      <th>total_amount</th>\n","      <th>congestion_surcharge</th>\n","      <th>airport_fee</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>100</th>\n","      <td>1</td>\n","      <td>2022-01-01 00:36:35</td>\n","      <td>2022-01-01 00:36:35</td>\n","      <td>1.0</td>\n","      <td>0.00</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>132</td>\n","      <td>264</td>\n","      <td>2</td>\n","      <td>115.0</td>\n","      <td>1.75</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>117.55</td>\n","      <td>0.0</td>\n","      <td>1.25</td>\n","    </tr>\n","    <tr>\n","      <th>101</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:30:07</td>\n","      <td>2022-01-01 00:49:30</td>\n","      <td>1.0</td>\n","      <td>5.59</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>142</td>\n","      <td>79</td>\n","      <td>2</td>\n","      <td>19.5</td>\n","      <td>0.50</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>23.30</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>1</td>\n","      <td>2022-01-01 00:10:26</td>\n","      <td>2022-01-01 00:19:07</td>\n","      <td>1.0</td>\n","      <td>1.20</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>68</td>\n","      <td>234</td>\n","      <td>2</td>\n","      <td>6.5</td>\n","      <td>3.00</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>10.30</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>2</td>\n","      <td>2022-01-01 01:00:33</td>\n","      <td>2022-01-01 01:25:46</td>\n","      <td>2.0</td>\n","      <td>5.52</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>255</td>\n","      <td>249</td>\n","      <td>1</td>\n","      <td>20.5</td>\n","      <td>0.50</td>\n","      <td>0.5</td>\n","      <td>4.86</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>29.16</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>1</td>\n","      <td>2022-01-01 00:26:48</td>\n","      <td>2022-01-01 00:29:57</td>\n","      <td>2.0</td>\n","      <td>0.40</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>43</td>\n","      <td>239</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","      <td>3.00</td>\n","      <td>0.5</td>\n","      <td>1.55</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>9.35</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:49:55</td>\n","      <td>2022-01-01 01:11:52</td>\n","      <td>1.0</td>\n","      <td>3.94</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>164</td>\n","      <td>88</td>\n","      <td>2</td>\n","      <td>16.5</td>\n","      <td>0.50</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>20.30</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:17:27</td>\n","      <td>2022-01-01 00:30:05</td>\n","      <td>1.0</td>\n","      <td>2.08</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>238</td>\n","      <td>262</td>\n","      <td>1</td>\n","      <td>11.0</td>\n","      <td>0.50</td>\n","      <td>0.5</td>\n","      <td>2.00</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>16.80</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:10:45</td>\n","      <td>2022-01-01 00:13:47</td>\n","      <td>3.0</td>\n","      <td>0.35</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>170</td>\n","      <td>170</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","      <td>0.50</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>7.80</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:30:14</td>\n","      <td>2022-01-01 00:32:12</td>\n","      <td>1.0</td>\n","      <td>0.84</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>137</td>\n","      <td>79</td>\n","      <td>1</td>\n","      <td>4.5</td>\n","      <td>0.50</td>\n","      <td>0.5</td>\n","      <td>1.66</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>9.96</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:28:24</td>\n","      <td>2022-01-01 00:56:24</td>\n","      <td>1.0</td>\n","      <td>6.98</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>249</td>\n","      <td>179</td>\n","      <td>2</td>\n","      <td>24.0</td>\n","      <td>0.50</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>27.80</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 19 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c21ea182-cbb7-4a4f-b450-22c1ef52f70c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c21ea182-cbb7-4a4f-b450-22c1ef52f70c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c21ea182-cbb7-4a4f-b450-22c1ef52f70c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["df.columns\n","df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hzoY8Gc4seLZ","executionInfo":{"status":"ok","timestamp":1676141584281,"user_tz":300,"elapsed":9,"user":{"displayName":"Andrea Lopez","userId":"06384222725563447101"}},"outputId":"7b7dc561-27d2-44fe-8d50-ff550e444e27"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["VendorID                   int64\n","tpep_pickup_datetime      object\n","tpep_dropoff_datetime     object\n","passenger_count          float64\n","trip_distance            float64\n","RatecodeID               float64\n","store_and_fwd_flag        object\n","PULocationID               int64\n","DOLocationID               int64\n","payment_type               int64\n","fare_amount              float64\n","extra                    float64\n","mta_tax                  float64\n","tip_amount               float64\n","tolls_amount             float64\n","improvement_surcharge    float64\n","total_amount             float64\n","congestion_surcharge     float64\n","airport_fee              float64\n","dtype: object"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["Build new dataframe"],"metadata":{"id":"gyw3YJXo4xBQ"}},{"cell_type":"code","source":["private_df = pd.DataFrame(data=None, columns=df.columns)\n","private_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":113},"id":"L01wsJsB4wWe","executionInfo":{"status":"ok","timestamp":1676142978167,"user_tz":300,"elapsed":12,"user":{"displayName":"Andrea Lopez","userId":"06384222725563447101"}},"outputId":"ee45a308-8a49-48dc-c7c6-705457ebe025"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [VendorID, tpep_pickup_datetime, tpep_dropoff_datetime, passenger_count, trip_distance, RatecodeID, store_and_fwd_flag, PULocationID, DOLocationID, payment_type, fare_amount, extra, mta_tax, tip_amount, tolls_amount, improvement_surcharge, total_amount, congestion_surcharge, airport_fee]\n","Index: []"],"text/html":["\n","  <div id=\"df-7244075a-9411-4409-9191-fb6da3f00eca\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VendorID</th>\n","      <th>tpep_pickup_datetime</th>\n","      <th>tpep_dropoff_datetime</th>\n","      <th>passenger_count</th>\n","      <th>trip_distance</th>\n","      <th>RatecodeID</th>\n","      <th>store_and_fwd_flag</th>\n","      <th>PULocationID</th>\n","      <th>DOLocationID</th>\n","      <th>payment_type</th>\n","      <th>fare_amount</th>\n","      <th>extra</th>\n","      <th>mta_tax</th>\n","      <th>tip_amount</th>\n","      <th>tolls_amount</th>\n","      <th>improvement_surcharge</th>\n","      <th>total_amount</th>\n","      <th>congestion_surcharge</th>\n","      <th>airport_fee</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7244075a-9411-4409-9191-fb6da3f00eca')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7244075a-9411-4409-9191-fb6da3f00eca button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7244075a-9411-4409-9191-fb6da3f00eca');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["# For each column independently, extract noisy measurements (Laplace)\n","## Numeric columns only"],"metadata":{"id":"PLqxbtdQsxU-"}},{"cell_type":"code","source":["# Private mean\n","def private_mean(privacy_budget: float, col:str) -> float:\n","    low_bound = min(df[col])\n","    up_bound = max(df[col])\n","    x = BoundedMean(privacy_budget, 0, low_bound, up_bound, dtype='float')\n","    return x.quick_result(list(df[col].astype('float')))\n","\n","# Private max\n","def private_max(privacy_budget: float, col:str) -> int:\n","    low_bound = min(df[col])\n","    up_bound = max(df[col])\n","    x = Max(epsilon = privacy_budget, lower_bound=low_bound, upper_bound=up_bound, dtype=\"float\")\n","    return x.quick_result(list(df[col].astype('float')))\n","\n","# Private min\n","# Min doesn't exist in dp???\n","\n","# Private sum\n","def private_sum(privacy_budget: float, col:str) -> int:\n","    x = BoundedSum(epsilon = privacy_budget, delta = 0, lower_bound= 1, upper_bound = 100, dtype=\"float\")\n","    return x.quick_result(list(df[col].astype('float')))"],"metadata":{"id":"iFtOu0jORB89"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["epsilon = 0.01\n","\n","private_means = []\n","real_means = []\n","private_maxes = []\n","private_sums = []\n","numeric_columns = ['passenger_count', 'trip_distance', 'payment_type', 'fare_amount', 'extra', 'mta_tax', 'tip_amount', 'tolls_amount', 'improvement_surcharge',\n","                    'total_amount', 'congestion_surcharge', 'airport_fee']\n","for col in numeric_columns:\n","  if df[col].dtypes == 'int64' or df[col].dtypes == 'float64':\n","    # Pull metrics\n","    private_means.append(private_mean(epsilon, col))\n","    real_means.append(statistics.mean(list(df[col])))\n","    private_maxes.append((col, private_max(epsilon, col)))\n","    private_sums.append((col, private_sum(epsilon, col)))\n","\n","print(private_means) # -> private means has all of our means w/ noise in a list, each element is (column name, private mean)\n","print(private_maxes)\n","print(private_sums)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hWBJiHzFySvQ","executionInfo":{"status":"ok","timestamp":1676152269673,"user_tz":300,"elapsed":5259,"user":{"displayName":"Andrea Lopez","userId":"06384222725563447101"}},"outputId":"6d6af049-0b2f-42bf-9bfc-c426391dea86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1.3810723569259815, 2.360619941844888, 1.2253476699636496, 13.780547207573676, 1.0330128661788018, 0.4928282596749837, 2.3862933201664447, 0.3254977983719556, 0.29631634692370257, 19.488451516304565, 2.2783439551790203, 0.08227120121225887]\n","[('passenger_count', 5.973796902707848), ('trip_distance', 50.90426001775439), ('payment_type', 3.9555048950710185), ('fare_amount', 291.6436129092715), ('extra', 4.51733648260331), ('mta_tax', 0.5), ('tip_amount', 29.063977336385822), ('tolls_amount', 17.80871417037899), ('improvement_surcharge', 0.29999999999999993), ('total_amount', 483.51222843477194), ('congestion_surcharge', 2.5), ('airport_fee', 1.249999920050194)]\n","[('passenger_count', 212145.3611165285), ('trip_distance', 470423.41738930345), ('payment_type', 176069.7607947141), ('fare_amount', 1836271.1507793516), ('extra', 236045.65578605235), ('mta_tax', 159230.72382493317), ('tip_amount', 402682.50454621017), ('tolls_amount', 198820.88900853693), ('improvement_surcharge', 143637.37176290154), ('total_amount', 2752201.5841189474), ('congestion_surcharge', 346447.06119661033), ('airport_fee', 143411.4904204905)]\n"]}]},{"cell_type":"markdown","source":["Find average tip (tip amount/fare amount) for Vendor 1 vs Vendor 2"],"metadata":{"id":"BtzzJv71df4F"}},{"cell_type":"code","source":["# Create column: tip percent\n","tip_percent = []\n","for i in range(len(df)):\n","  if df['fare_amount'].iloc[i] == 0:\n","    tip = None\n","  else:\n","    tip = df['tip_amount'].iloc[i] / df['fare_amount'].iloc[i]\n","  tip_percent.append(tip)\n","\n","df['tip_percent'] = tip_percent\n","df['tip_percent'].isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vHenpRQedfVS","executionInfo":{"status":"ok","timestamp":1676154066516,"user_tz":300,"elapsed":3638,"user":{"displayName":"Andrea Lopez","userId":"06384222725563447101"}},"outputId":"e2dc8390-a8a5-43cb-f166-acf2749a2f66"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["65"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["# Compare Vendor 1 vs Vendor 2\n","\n","def private_mean_tip(privacy_budget, v):\n","    low_bound = min(v)\n","    up_bound = max(v)\n","    x = BoundedMean(privacy_budget, 0, low_bound, up_bound, dtype='float')\n","    return x.quick_result(list(v))\n","\n","epsilon = 0.01\n","\n","# average tip percents\n","v1_tip_p = df[df['VendorID']==1]['tip_percent'].dropna()\n","v2_tip_p = df[df['VendorID']==2]['tip_percent'].dropna()\n","\n","v1_tip_p_avg = private_mean_tip(epsilon, v1_tip_p)\n","v2_tip_p_avg = private_mean_tip(epsilon, v2_tip_p)\n","\n","# average tip amounts\n","v1_tip_a = df[df['VendorID']==1]['tip_amount'].dropna()\n","v2_tip_a = df[df['VendorID']==2]['tip_amount'].dropna()\n","\n","v1_tip_a_avg = private_mean_tip(epsilon, v1_tip_a)\n","v2_tip_a_avg = private_mean_tip(epsilon, v2_tip_a)\n","\n","# average fare amounts\n","v1_fare_a = df[df['VendorID']==1]['fare_amount'].dropna()\n","v2_fare_a = df[df['VendorID']==2]['fare_amount'].dropna()\n","\n","v1_fare_a_avg = private_mean_tip(epsilon, v1_fare_a)\n","v2_fare_a_avg = private_mean_tip(epsilon, v2_fare_a)"],"metadata":{"id":"Cz6aba2yeq7P"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Data visualizations"],"metadata":{"id":"BW9rGqXQRpHZ"}},{"cell_type":"markdown","source":["Real means vs noisy means per column"],"metadata":{"id":"N2mfY47cRtpo"}},{"cell_type":"code","source":["import matplotlib\n","import matplotlib.pyplot as plt\n","import numpy as np\n","\n","labels = numeric_columns\n","numeric_columns = ['passenger_count', 'trip_distance', 'payment_type', 'fare_amount', 'extra', 'mta_tax', 'tip_amount', 'tolls_\\n amount', 'improvement_\\n surcharge',\n","                    'total_amount', 'congestion_\\n surcharge', 'airport_fee']\n","x = np.arange(len(labels))  # the label locations\n","width = 0.35  # the width of the bars\n","\n","fig, ax = plt.subplots()\n","rects1 = ax.bar(x - width/2, real_means, width, label='Real')\n","rects2 = ax.bar(x + width/2, private_means, width, label='Private')\n","\n","# Add some text for labels, title and custom x-axis tick labels, etc.\n","ax.set_ylabel('Mean')\n","ax.set_xlabel('Attribute')\n","ax.set_title(f'Real vs. Private Mean per Attribute with Epsilon={epsilon}')\n","ax.set_xticks(x, labels)\n","ax.legend()\n","\n","matplotlib.axes.Axes.bar_label\n","ax.bar_label(rects1, fmt='%.2f', padding=3)\n","ax.bar_label(rects2, fmt='%.2f', padding=3)\n","\n","fig.tight_layout()\n","from matplotlib.pyplot import figure\n","\n","fig = matplotlib.pyplot.gcf()\n","fig.set_size_inches(18.5, 10.5)\n","#plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":634},"id":"Em_R45Md1klB","executionInfo":{"status":"ok","timestamp":1676155253826,"user_tz":300,"elapsed":823,"user":{"displayName":"Andrea Lopez","userId":"06384222725563447101"}},"outputId":"015fc8ab-b119-4789-9403-520ca1e77c59"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1332x756 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# bar chart of Vendor 1 vs Vendor 2 mean TIP PERCENTAGE AMOUNT\n","fig = plt.figure()\n","ax = fig.add_axes([0,0,1,1])\n","vendors = ['Vendor1', 'Vendor2']\n","means = [v1_tip_p_avg, v2_tip_p_avg]\n","ax.bar(vendors,means)\n","plt.show()\n","print(v1_tip_p_avg, v2_tip_p_avg)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":353},"id":"LJpN3E_JiXLk","executionInfo":{"status":"ok","timestamp":1676155494341,"user_tz":300,"elapsed":198,"user":{"displayName":"Andrea Lopez","userId":"06384222725563447101"}},"outputId":"3d6eb5ea-4f8c-404e-d665-5d21caeeeaaf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["38.05272410383668 0.14087653458634009\n"]}]},{"cell_type":"code","source":["# VENDOR 1 VS VENDOR 2 TIP AMOUNT\n","fig = plt.figure()\n","ax = fig.add_axes([0,0,1,1])\n","vendors = ['Vendor1', 'Vendor2']\n","means = [v1_tip_a_avg, v2_tip_a_avg]\n","ax.bar(vendors,means)\n","plt.show()\n","print(v1_tip_a_avg, v2_tip_a_avg)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":353},"id":"rrxhKL31lGNz","executionInfo":{"status":"ok","timestamp":1676155522996,"user_tz":300,"elapsed":371,"user":{"displayName":"Andrea Lopez","userId":"06384222725563447101"}},"outputId":"675e2f95-6a04-4f3a-8045-6ddbe026f5a3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["2.3378650856630756 2.484226781432106\n"]}]},{"cell_type":"code","source":["# VENDOR 1 VS VENDOR 2 TIP AMOUNT AND FARE AMOUNT\n","\n","labels = ['Vendor1', 'Vendor2']\n","\n","x = np.arange(len(labels))  # the label locations\n","width = 0.35  # the width of the bars\n","fare = [v1_fare_a_avg, v2_fare_a_avg]\n","tip = [v1_tip_a_avg, v2_tip_a_avg]\n","\n","fig, ax = plt.subplots()\n","rects1 = ax.bar(x - width/2, fare, width, label='Fare')\n","rects2 = ax.bar(x + width/2, tip, width, label='Tip')\n","\n","# Add some text for labels, title and custom x-axis tick labels, etc.\n","ax.set_ylabel('Average Amount ($)')\n","ax.set_xlabel('Vendor')\n","ax.set_title(f'Vendor1 vs Vendor2 Average Fare and Tip amounts with Epsilon={epsilon}')\n","ax.set_xticks(x, labels)\n","ax.legend()\n","\n","matplotlib.axes.Axes.bar_label\n","ax.bar_label(rects1, fmt='%.2f', padding=3)\n","ax.bar_label(rects2, fmt='%.2f', padding=3)\n","\n","fig.tight_layout()\n","from matplotlib.pyplot import figure\n","\n","fig = matplotlib.pyplot.gcf()\n","fig.set_size_inches(18.5, 10.5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":654},"id":"AZfJ1SJxlKMH","executionInfo":{"status":"ok","timestamp":1676155537381,"user_tz":300,"elapsed":491,"user":{"displayName":"Andrea Lopez","userId":"06384222725563447101"}},"outputId":"7285ec9f-45b1-40f9-e4dd-128653c0a3d6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1332x756 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}