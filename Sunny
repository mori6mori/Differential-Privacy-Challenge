{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["CDSS Data Science Hackathon 2023\n","\n","Data and Privacy Track\n","\n","Sunny Fang, Lucy King, Andrea Lopez, Mori Liu"],"metadata":{"id":"NTv_FUZ1L4gz"}},{"cell_type":"code","source":["! pip install python-dp"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VY16vPbOymDx","executionInfo":{"status":"ok","timestamp":1676153675089,"user_tz":300,"elapsed":4212,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"a527512d-cda8-464b-b5ff-731052a0897c"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: python-dp in /usr/local/lib/python3.8/dist-packages (1.1.1)\n"]}]},{"cell_type":"code","execution_count":59,"metadata":{"id":"6p-DntdaLzNw","executionInfo":{"status":"ok","timestamp":1676153675091,"user_tz":300,"elapsed":29,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}}},"outputs":[],"source":["import pandas as pd\n","import pydp as dp\n","from pydp.algorithms.laplacian import BoundedSum, BoundedMean, Count, Max\n","import pandas as pd\n","import statistics  # for calculating mean without applying differential privacy"]},{"cell_type":"markdown","source":["Import dataset & clean"],"metadata":{"id":"P6DK42BfrfIv"}},{"cell_type":"code","source":["df = pd.read_csv('/yellow_cab_data.csv')\n","df = df.dropna()\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"3RmewPXkriKK","executionInfo":{"status":"ok","timestamp":1676153675733,"user_tz":300,"elapsed":667,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"948012a9-74fb-41b7-e5ba-15c398b1ee78"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   VendorID tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n","0         2  2022-01-01 00:17:55   2022-01-01 00:27:45              1.0   \n","1         2  2022-01-01 00:22:03   2022-01-01 00:25:37              1.0   \n","2         2  2022-01-01 00:52:33   2022-01-01 00:58:07              1.0   \n","3         2  2022-01-01 00:31:12   2022-01-02 00:00:58              1.0   \n","4         2  2022-01-01 00:05:26   2022-01-01 00:29:05              1.0   \n","\n","   trip_distance  RatecodeID store_and_fwd_flag  PULocationID  DOLocationID  \\\n","0           4.22         1.0                  N           138            92   \n","1           0.69         1.0                  N           236           262   \n","2           0.87         1.0                  N           141           229   \n","3           3.03         1.0                  N            79           261   \n","4           4.56         1.0                  N            50            79   \n","\n","   payment_type  fare_amount  extra  mta_tax  tip_amount  tolls_amount  \\\n","0             2         14.0    0.5      0.5        0.00           0.0   \n","1             1          4.5    0.5      0.5        1.66           0.0   \n","2             1          5.5    0.5      0.5        2.32           0.0   \n","3             2         15.0    0.5      0.5        0.00           0.0   \n","4             1         18.5    0.5      0.5        4.46           0.0   \n","\n","   improvement_surcharge  total_amount  congestion_surcharge  airport_fee  \n","0                    0.3         16.55                   0.0         1.25  \n","1                    0.3          9.96                   2.5         0.00  \n","2                    0.3         11.62                   2.5         0.00  \n","3                    0.3         18.80                   2.5         0.00  \n","4                    0.3         26.76                   2.5         0.00  "],"text/html":["\n","  <div id=\"df-0dd6c105-5b61-400d-80cb-7cea1de2b001\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VendorID</th>\n","      <th>tpep_pickup_datetime</th>\n","      <th>tpep_dropoff_datetime</th>\n","      <th>passenger_count</th>\n","      <th>trip_distance</th>\n","      <th>RatecodeID</th>\n","      <th>store_and_fwd_flag</th>\n","      <th>PULocationID</th>\n","      <th>DOLocationID</th>\n","      <th>payment_type</th>\n","      <th>fare_amount</th>\n","      <th>extra</th>\n","      <th>mta_tax</th>\n","      <th>tip_amount</th>\n","      <th>tolls_amount</th>\n","      <th>improvement_surcharge</th>\n","      <th>total_amount</th>\n","      <th>congestion_surcharge</th>\n","      <th>airport_fee</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:17:55</td>\n","      <td>2022-01-01 00:27:45</td>\n","      <td>1.0</td>\n","      <td>4.22</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>138</td>\n","      <td>92</td>\n","      <td>2</td>\n","      <td>14.0</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>16.55</td>\n","      <td>0.0</td>\n","      <td>1.25</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:22:03</td>\n","      <td>2022-01-01 00:25:37</td>\n","      <td>1.0</td>\n","      <td>0.69</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>236</td>\n","      <td>262</td>\n","      <td>1</td>\n","      <td>4.5</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>1.66</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>9.96</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:52:33</td>\n","      <td>2022-01-01 00:58:07</td>\n","      <td>1.0</td>\n","      <td>0.87</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>141</td>\n","      <td>229</td>\n","      <td>1</td>\n","      <td>5.5</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>2.32</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>11.62</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:31:12</td>\n","      <td>2022-01-02 00:00:58</td>\n","      <td>1.0</td>\n","      <td>3.03</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>79</td>\n","      <td>261</td>\n","      <td>2</td>\n","      <td>15.0</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>18.80</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>2022-01-01 00:05:26</td>\n","      <td>2022-01-01 00:29:05</td>\n","      <td>1.0</td>\n","      <td>4.56</td>\n","      <td>1.0</td>\n","      <td>N</td>\n","      <td>50</td>\n","      <td>79</td>\n","      <td>1</td>\n","      <td>18.5</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>4.46</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>26.76</td>\n","      <td>2.5</td>\n","      <td>0.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0dd6c105-5b61-400d-80cb-7cea1de2b001')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0dd6c105-5b61-400d-80cb-7cea1de2b001 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0dd6c105-5b61-400d-80cb-7cea1de2b001');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["df[\"VendorID\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hzoY8Gc4seLZ","executionInfo":{"status":"ok","timestamp":1676153675734,"user_tz":300,"elapsed":15,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"998ddaaa-6e60-454f-80f5-a2f55c0cf5d7"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2    101438\n","1     44281\n","Name: VendorID, dtype: int64"]},"metadata":{},"execution_count":61}]},{"cell_type":"markdown","source":["Build new dataframe"],"metadata":{"id":"gyw3YJXo4xBQ"}},{"cell_type":"markdown","source":["# Laplace"],"metadata":{"id":"PLqxbtdQsxU-"}},{"cell_type":"code","source":["# BOUNDS SHOULD BE MIN AND MAX PER COLUMBN\n","\n","# Real mean\n","def real_mean(col: str) -> float:\n","  return statistics.mean(list(df[col]))\n","\n","# Private mean\n","def private_mean(privacy_budget: float, col:str) -> float:\n","  # privacy_budget -> between 0 and 1, denoting privacy threshold\n","  x = BoundedMean(privacy_budget, 0, 1, 100)\n","  return x.quick_result(list(df[col]))\n","\n","for col in df.columns:\n","  if df[col].dtypes == 'int64': #or df[col].dtypes == 'float64':\n","    print(col, \":\", sep=\"\")\n","    print(\"Real mean: \\t\", real_mean(col))\n","    print(\"Private mean: \\t\", private_mean(1, col), \"\\n\")\n","\n","# Mean VendorID, Pickup LocationID, Dropoff LocationID, and payment type are not relevant?"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hWBJiHzFySvQ","executionInfo":{"status":"ok","timestamp":1676153676641,"user_tz":300,"elapsed":919,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"8efd06d9-15d4-459b-e3f4-6b86838c6fa2"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["VendorID:\n","Real mean: \t 1.6961206157055704\n","Private mean: \t 1.6930988392685578 \n","\n","PULocationID:\n","Real mean: \t 165.9908042190792\n","Private mean: \t 93.77725185036206 \n","\n","DOLocationID:\n","Real mean: \t 163.886164467228\n","Private mean: \t 91.22513570034968 \n","\n","payment_type:\n","Real mean: \t 1.229139645482058\n","Private mean: \t 1.22884005266409 \n","\n"]}]},{"cell_type":"code","source":["original_dataset = df.copy()\n","redact_dataset = original_dataset.copy()[1:]\n","print(original_dataset.head())"],"metadata":{"id":"Em_R45Md1klB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676153676642,"user_tz":300,"elapsed":39,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"517ee564-33e7-4d85-a22e-a48bb933fc28"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["   VendorID tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n","0         2  2022-01-01 00:17:55   2022-01-01 00:27:45              1.0   \n","1         2  2022-01-01 00:22:03   2022-01-01 00:25:37              1.0   \n","2         2  2022-01-01 00:52:33   2022-01-01 00:58:07              1.0   \n","3         2  2022-01-01 00:31:12   2022-01-02 00:00:58              1.0   \n","4         2  2022-01-01 00:05:26   2022-01-01 00:29:05              1.0   \n","\n","   trip_distance  RatecodeID store_and_fwd_flag  PULocationID  DOLocationID  \\\n","0           4.22         1.0                  N           138            92   \n","1           0.69         1.0                  N           236           262   \n","2           0.87         1.0                  N           141           229   \n","3           3.03         1.0                  N            79           261   \n","4           4.56         1.0                  N            50            79   \n","\n","   payment_type  fare_amount  extra  mta_tax  tip_amount  tolls_amount  \\\n","0             2         14.0    0.5      0.5        0.00           0.0   \n","1             1          4.5    0.5      0.5        1.66           0.0   \n","2             1          5.5    0.5      0.5        2.32           0.0   \n","3             2         15.0    0.5      0.5        0.00           0.0   \n","4             1         18.5    0.5      0.5        4.46           0.0   \n","\n","   improvement_surcharge  total_amount  congestion_surcharge  airport_fee  \n","0                    0.3         16.55                   0.0         1.25  \n","1                    0.3          9.96                   2.5         0.00  \n","2                    0.3         11.62                   2.5         0.00  \n","3                    0.3         18.80                   2.5         0.00  \n","4                    0.3         26.76                   2.5         0.00  \n"]}]},{"cell_type":"code","source":["print(redact_dataset.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_mWH6WThPAZ7","executionInfo":{"status":"ok","timestamp":1676153676643,"user_tz":300,"elapsed":35,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"3ab00648-6c69-4ca9-e284-ae15353bbf5e"},"execution_count":64,"outputs":[{"output_type":"stream","name":"stdout","text":["   VendorID tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n","1         2  2022-01-01 00:22:03   2022-01-01 00:25:37              1.0   \n","2         2  2022-01-01 00:52:33   2022-01-01 00:58:07              1.0   \n","3         2  2022-01-01 00:31:12   2022-01-02 00:00:58              1.0   \n","4         2  2022-01-01 00:05:26   2022-01-01 00:29:05              1.0   \n","5         2  2022-01-01 00:45:08   2022-01-01 00:55:40              1.0   \n","\n","   trip_distance  RatecodeID store_and_fwd_flag  PULocationID  DOLocationID  \\\n","1           0.69         1.0                  N           236           262   \n","2           0.87         1.0                  N           141           229   \n","3           3.03         1.0                  N            79           261   \n","4           4.56         1.0                  N            50            79   \n","5           1.91         1.0                  N           144           164   \n","\n","   payment_type  fare_amount  extra  mta_tax  tip_amount  tolls_amount  \\\n","1             1          4.5    0.5      0.5        1.66           0.0   \n","2             1          5.5    0.5      0.5        2.32           0.0   \n","3             2         15.0    0.5      0.5        0.00           0.0   \n","4             1         18.5    0.5      0.5        4.46           0.0   \n","5             1          9.5    0.5      0.5        0.00           0.0   \n","\n","   improvement_surcharge  total_amount  congestion_surcharge  airport_fee  \n","1                    0.3          9.96                   2.5          0.0  \n","2                    0.3         11.62                   2.5          0.0  \n","3                    0.3         18.80                   2.5          0.0  \n","4                    0.3         26.76                   2.5          0.0  \n","5                    0.3         13.30                   2.5          0.0  \n"]}]},{"cell_type":"code","source":["# sum (not differentially private)\n","sum_original_dataset = round(sum(original_dataset['fare_amount'].to_list()))\n","sum_redact_dataset = round(sum(redact_dataset['fare_amount'].to_list()))\n","\n","print(f\"Sum of sales_value in the orignal dataset:\", sum_original_dataset)\n","print(f\"Sum of sales_value in the redact dataset:\", sum_redact_dataset)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1UXDrjFkQTXO","executionInfo":{"status":"ok","timestamp":1676153676644,"user_tz":300,"elapsed":31,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"ca7c7f62-4bb1-435f-fc00-49539698044f"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["Sum of sales_value in the orignal dataset: 1841851\n","Sum of sales_value in the redact dataset: 1841837\n"]}]},{"cell_type":"code","source":["# sum (differentially private)\n","og = original_dataset[\"fare_amount\"].to_list()\n","redact = redact_dataset['fare_amount'].to_list()\n","\n","print(f\"max og:\", max(og))\n","print(f\"min og:\", min(og))\n","\n","print(f\"max redact:\", max(redact))\n","print(f\"min redact:\", min(redact))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v0o8Y6CsVT4P","executionInfo":{"status":"ok","timestamp":1676153676645,"user_tz":300,"elapsed":28,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"db7d2180-20c1-491b-cc71-98d44c64f31b"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stdout","text":["max og: 640.5\n","min og: -230.0\n","max redact: 640.5\n","min redact: -230.0\n"]}]},{"cell_type":"code","source":["dp_sum_original_dataset = BoundedSum(\n","    epsilon=1, lower_bound=-80.0, upper_bound=240.0, dtype=\"float\"\n",")\n","\n","dp_sum_original_dataset.reset()\n","dp_sum_original_dataset.add_entries(\n","    original_dataset[\"fare_amount\"].to_list()\n",")  # adding the data to the DP algorithm\n","     \n","dp_sum_og = round(dp_sum_original_dataset.result(), 2)\n","print(dp_sum_og)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CIzxHcxtWqiE","executionInfo":{"status":"ok","timestamp":1676153676646,"user_tz":300,"elapsed":26,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"36545fbb-fda8-44dd-e68f-10ac4e59a38d"},"execution_count":67,"outputs":[{"output_type":"stream","name":"stdout","text":["1840608.27\n"]}]},{"cell_type":"code","source":["dp_redact_dataset = BoundedSum(epsilon=1, lower_bound=-80.0, upper_bound=240.0, dtype=\"float\")\n","dp_redact_dataset.add_entries(redact_dataset[\"fare_amount\"].to_list())\n","dp_sum_redact = round(dp_redact_dataset.result(), 2)\n","print(dp_sum_redact)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gBgeXj6yWrMA","executionInfo":{"status":"ok","timestamp":1676153676647,"user_tz":300,"elapsed":24,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"32c80c11-b2b1-4c20-e22a-0d0442429f34"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["1841039.96\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","new_df = df[['VendorID','fare_amount', 'tip_amount']].copy()\n","new_df['ratio'] = new_df['tip_amount'] / new_df['fare_amount']\n","new_df = new_df.dropna()\n","new_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"hz_hL4cUTgTp","executionInfo":{"status":"ok","timestamp":1676154108445,"user_tz":300,"elapsed":403,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"c8408f9d-226f-43df-c8e4-95c9d898e014"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   VendorID  fare_amount  tip_amount     ratio\n","0         2         14.0        0.00  0.000000\n","1         2          4.5        1.66  0.368889\n","2         2          5.5        2.32  0.421818\n","3         2         15.0        0.00  0.000000\n","4         2         18.5        4.46  0.241081"],"text/html":["\n","  <div id=\"df-3e77f9c4-696f-450d-bad0-4a6f3747d834\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VendorID</th>\n","      <th>fare_amount</th>\n","      <th>tip_amount</th>\n","      <th>ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>14.0</td>\n","      <td>0.00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4.5</td>\n","      <td>1.66</td>\n","      <td>0.368889</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>5.5</td>\n","      <td>2.32</td>\n","      <td>0.421818</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>15.0</td>\n","      <td>0.00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>18.5</td>\n","      <td>4.46</td>\n","      <td>0.241081</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e77f9c4-696f-450d-bad0-4a6f3747d834')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3e77f9c4-696f-450d-bad0-4a6f3747d834 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3e77f9c4-696f-450d-bad0-4a6f3747d834');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["ratio = new_df[\"tip_to_fare\"].to_list()\n","plt.plot(ratio)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"B5YJSPayhsZ7","executionInfo":{"status":"ok","timestamp":1676153677047,"user_tz":300,"elapsed":23,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"6d3a4da6-6e84-4b14-ae84-4c6c6b432711"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f7abdc30e80>]"]},"metadata":{},"execution_count":70},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from scipy import stats\n","CAT_1 = new_df.query(\"VendorID == '1'\")[\"ratio\"] ## change INDEPENDENT_VAR == 'CAT_1'\n","CAT_2 = new_df.query(\"VendorID == '2'\")[\"ratio\"]\n","\n","ttest = stats.ttest_ind(CAT_1, CAT_2) \n","display(ttest)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"fM6qGoHsjD_n","executionInfo":{"status":"ok","timestamp":1676154117488,"user_tz":300,"elapsed":12,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"4cf77bd5-087c-417f-9f6b-04faf7a75728"},"execution_count":85,"outputs":[{"output_type":"display_data","data":{"text/plain":["Ttest_indResult(statistic=nan, pvalue=nan)"]},"metadata":{}}]},{"cell_type":"code","source":["v1_tip_percent = new_df.loc[new_df['VendorID'] == '1', 'ratio'].tolist()\n","v2_tip_percent = new_df.loc[new_df['VendorID'] == '2', 'ratio'].tolist()\n","\n","def private_mean(privacy_budget: float, vendor: str) -> float:\n","    x = BoundedMean(privacy_budget, 0, 1, 100)\n","    return x.quick_result(vendor)\n","\n","private_mean(0.1, v1_tip_percent)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bo8Nk-ZOmRUs","executionInfo":{"status":"ok","timestamp":1676154832520,"user_tz":300,"elapsed":6,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"d44dc0eb-817e-4d3d-8d9b-acd785962dc9"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["private_mean(0.1, v2_tip_percent)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ObbkZdiUnNoH","executionInfo":{"status":"ok","timestamp":1676154830437,"user_tz":300,"elapsed":22,"user":{"displayName":"Sunny Fang","userId":"09271635329943428422"}},"outputId":"22a7afb2-2963-45d7-93f0-66806167b511"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":98}]},{"cell_type":"markdown","source":[],"metadata":{"id":"ogRGOlkXQYZE"}}]}